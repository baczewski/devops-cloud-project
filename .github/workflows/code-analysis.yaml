name: Python-Code-Style

on:
  push:
    branches:
      - 'master'
      - 'dev'
  pull_request:
    branches:
      - 'master'

jobs:
  # Static style code analysis
  Use-Flake8:
    runs-on: ubuntu-latest

    steps:
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12.0

      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install flake8
        run: pip install flake8

      - name: Run flake8
        uses: py-actions/flake8@v2

  Use-MyPy:
    runs-on: ubuntu-latest

    steps:
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12.0

      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install MyPy
        run: pip install mypy

      - name: Run mypy
        uses: sasanquaneuf/mypy-github-action@releases/v1
        with:
          checkName: 'Use-MyPy'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  Use-Ruff:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        
      - name: Run Ruff
        uses: chartboost/ruff-action@v1

        
  # Static security code analysis
  Scan-With-SonarCloud:
    name: Scan with SonarCloud
    runs-on: ubuntu-latest

    needs: [Use-Flake8, Use-MyPy, Use-Ruff]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}

  Scan-With-Snyk:
    name: Scan with Snyk
    runs-on: ubuntu-latest

    needs: [Use-Flake8, Use-MyPy, Use-Ruff]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Python
        run: sudo apt-get update -y && sudo apt-get install -y python3 python3-pip

      - name: Install Dependencies
        run: pip install -r src/requirements.txt

      - name: Setup Snyk
        uses: snyk/actions/setup@master

      - name: Run Snyk
        run: snyk test --file=src/requirements.txt
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  Scan-With-Spectral:
    name: Scan with Spectral
    runs-on: ubuntu-latest

    needs: [Use-Flake8, Use-MyPy, Use-Ruff]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install and run Spectral CI
        uses: spectralops/spectral-github-action@v4
        with:
          spectral-dsn: ${{ secrets.SPECTRAL_DSN }}
          spectral-args: scan --ok